
@{
    ViewBag.Title = "View";
}
@Html.Partial("_SideMenu")
<div class="m-grid__item m-grid__item--fluid m-wrapper">
    <div class="m-subheader ">
        <div class="d-flex align-items-center">
            <div class="mr-auto">
                <h3 class="m-subheader__title m-subheader__title--separator">
                    Requests
                </h3>
                <ul class="m-subheader__breadcrumbs m-nav m-nav--inline">
                    <li class="m-nav__item m-nav__item--home">
                        <a href="#" class="m-nav__link m-nav__link--icon">
                            <i class="m-nav__link-icon la la-home"></i>
                        </a>
                    </li>
                    <li class="m-nav__separator">
                        -
                    </li>
                    <li class="m-nav__item">
                        <a href="" class="m-nav__link">
                            <span class="m-nav__link-text">
                                Request Details
                            </span>
                        </a>
                    </li>
                </ul>
            </div>
            <div>
                
            </div>
        </div>
    </div>
    <div class="m-content">
        <div class="m-portlet m-portlet--mobile">
            <div class="m-portlet__head">
                <div class="m-portlet__head-caption">
                    <div class="m-portlet__head-title">
                        <h3 class="m-portlet__head-text">
                            Request Details
                        </h3>
                    </div>
                </div>
                <div class="m-portlet__head-tools">
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                        <span>
                            <i class="la la-plus"></i>
                            <span>New Response</span>
                        </span>
                    </button>
                </div>
            </div>
            <div class="m-portlet__body">
                <div class="col-md-12" style="padding:0px;">
                    <h5>Comment</h5>
                    <div class="col-md-7 TicketComment" id="TicketComment" style="padding:0"></div>
                    <br />
                    <div class="attachedDocuments" id="attachedDocuments">
                        <h5>Original Attachments</h5>
                        <ul></ul>
                    </div>
                </div>
                <br />
                <h5>Request History</h5>
                <!--begin: Datatable -->
                <div class="m_datatable m-datatable m-datatable--default m-datatable--loaded">
                    <table id="employer-data-table" class="datatable__table table table-striped" style="width:100%">
                        <thead>
                            <tr>
                                <th scope="col">RequestId</th>
                                <th scope="col">Comment</th>
                                <th scope="col">Assignee</th>
                                <th scope="col">Assignor</th>
                                <th scope="col">Assign Date</th>
                                <th scope="col">Assign Status</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <!--end: Datatable -->
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel">New Response</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form name="request" action='@Url.Action("UpdateRequest", "Requests")' method="post" enctype="multipart/form-data" id="updateRequest">
                <div class="modal-body">
                    <input name="requestId" type="hidden" value="" id="requestId" />
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Status:</label>
                        <select name="statusUpdate" id="statusUpdate" class="form-control" required>
                            <option value="">-Select A Status-</option>
                            <option value="Assigned">Assign</option>
                            <option value="Cancelled">Cancel</option>
                            <option value="Resolved">Resolve</option>
                        </select>
                    </div>
                    <div class="form-group internalStaff">
                        <label for="recipient-name" class="col-form-label">Internal User:</label>
                        <select name="internalUser" id="internalStaff1" class="form-control internalStaff1">
                            <option value="">-Select A User-</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Message:</label>
                        <textarea name="Comment" class="form-control" id="message-text" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Attachment:</label>
                        <small>File size must be less than 4mb and file type accepted includes jpg, png, gif, doc, pdf, .xls, xlsx </small>
                        <div class="field_wrapper">
                            <div class="input-group mb-3">
                                <div class="custom-file">
                                    <input type="file" name="attachFile" class="custom-file-input" id="iUpload" onchange="readURL(this);">
                                    <label class="custom-file-label" for="inputGroupFile02">Choose file</label>
                                </div>
                            </div>
                            <input type="hidden" name="convertedFile" class="form-control" id="base" />
                            <input type="hidden" name="fileExt" class="form-control" id="ext" />
                        </div>
                        <div class="field_wrapper">
                            <div class="input-group mb-3">
                                <div class="custom-file">
                                    <input type="file" name="attachFile1" class="custom-file-input" id="iUpload1" onchange="readURL1(this);">
                                    <label class="custom-file-label" for="inputGroupFile02">Choose file</label>
                                </div>
                            </div>
                            <input type="hidden" name="convertedFile1" class="form-control" id="base1" />
                            <input type="hidden" name="fileExt1" class="form-control" id="ext1" />
                        </div>
                        <div class="field_wrapper">
                            <div class="input-group mb-3">
                                <div class="custom-file">
                                    <input type="file" name="attachFile2" class="custom-file-input" id="iUpload2" onchange="readURL2(this);">
                                    <label class="custom-file-label" for="inputGroupFile02">Choose file</label>
                                </div>
                            </div>
                            <input type="hidden" name="convertedFile2" class="form-control" id="base2" />
                            <input type="hidden" name="fileExt2" class="form-control" id="ext2" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")

<script>
    var CommentId;
    getComment = "CommentId_"+localStorage.RequestId;
    Comment = localStorage.getItem(getComment);
    $("#TicketComment").html(Comment);
    var RequestId = "@ViewBag.RequestId";

    $("#requestId").val(RequestId);
    $.ajax({
        type: "GET",
        url: "@Url.Action("GetInternalUsers", "Requests")",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            $.each(data, function (index, item) {
                $.grep(item, function (user, i){
                        $('#internalStaff1').append($('<option>', {
                            value: user.ID,
                            text: user.FULLNAME
                        }));
                });
            });
        }
    });

    function readURL(input) {
        var iUpload = document.getElementById("iUpload");
        var regex = new RegExp("([a-zA-Z0-9\s_\\.\-:])+(.jpg|.png|.gif|.pdf|.doc|.docx|.xls|.xlsx|.csv)$");
        if (regex.test(iUpload.value.toLowerCase())){
		    if (input.files && input.files[0]) {
			    var reader = new FileReader();
                var fsize = iUpload.files[0].size;
                var conVertSize = Math.round((fsize / 1024));
                if(conVertSize > "4000"){
                    alert("Document size exceeds 4mb.");
                    $("#iUpload2").val("");
                    $('#ext').val("");
                    return false;
                }else{
                    reader.onload = function (e) {
				        $('#falseinput').attr('src', e.target.result);
				        $('#base').val(e.target.result);
                        $('#ext').val($('#iUpload').val().split('.').pop());
			        };
			        reader.readAsDataURL(input.files[0]);
                }
		    }
        }
        else {
            alert("Please select a valid Image file.");
            $("#iUpload").val("");
            return false;
        }
	}

    function readURL1(input) {
        var iUpload1 = document.getElementById("iUpload1");
        var regex1 = new RegExp("([a-zA-Z0-9\s_\\.\-:])+(.jpg|.png|.gif|.pdf|.doc|.docx|.xls|.xlsx|.csv)$");
        if (regex1.test(iUpload1.value.toLowerCase())) {
		    if (input.files && input.files[0]) {
			    var reader1 = new FileReader();
                var fsize1 = iUpload1.files[0].size;
                var conVertSize1 = Math.round((fsize1 / 1024));
                if(conVertSize1 > "4000"){
                    alert("Document size exceeds 4mb.");
                    $("#iUpload2").val("");
                    return false;
                }else{
                    reader1.onload = function (e) {
				        $('#falseinput').attr('src', e.target.result);
				        $('#base1').val(e.target.result);
                        $('#ext1').val($('#iUpload').val().split('.').pop());
			        };
			        reader1.readAsDataURL(input.files[0]);
                }
		    }
        }
        else {
            alert("Please select a valid Image file.");
            $("#iUpload1").val("");
            return false;
        }
	}

    function readURL2(input) {
        var iUpload2 = document.getElementById("iUpload2");
        var regex2 = new RegExp("([a-zA-Z0-9\s_\\.\-:])+(.jpg|.png|.gif|.pdf|.doc|.docx|.xls|.xlsx|.csv)$");
        if (regex2.test(iUpload2.value.toLowerCase())) {
		    if (input.files && input.files[0]) {
			    var reader2 = new FileReader();
                var fsize2 = iUpload2.files[0].size;
                var conVertSize2 = Math.round((fsize2 / 1024));
                if(conVertSize2 > "4000"){
                    alert("Document size exceeds 4mb.");
                    $("#iUpload2").val("");
                    return false;
                }else{
                    reader2.onload = function (e) {
				        $('#falseinput').attr('src', e.target.result);
				        $('#base2').val(e.target.result);
                        $('#ext2').val($('#iUpload').val().split('.').pop());
			        };
			        reader2.readAsDataURL(input.files[0]);
                }
		    }
        }
        else {
            alert("Please select a valid Image file.");
            $("#iUpload2").val("");
            return false;
        }
	}

    $(".internalStaff").hide();

    $(document).on('change', '#statusUpdate', function(){
        var selectedStatus = $("#statusUpdate").val();
        if(selectedStatus == "Assigned"){
            $(".internalStaff").show();
        }else{
            $(".internalStaff").hide();
        }
    });

    var assetListVM;
        $(function () {
            assetListVM = {
                dt: null,
                init: function () {
                    dt = $('#employer-data-table').DataTable({
                        "serverSide": true,
                        "processing": true,
                        "ajax": {
                            "type": 'GET',
                            "url": "@Url.Action("GetRequestsHistory", "Requests")",
                            "data": {RequestId: RequestId}
                        },
                        "columns": [
                            {"data": "RequestID"},
                            {"data": "Comment" },
                            {"data": "Assignee"},
                            {"data": "Assignor" },
                            {"data": "AssignDate" },
                            {"data": "AssignStatus" },
                            {}
                        ],
                        "aoColumns": [
                            {"mData": "RequestID", sDefaultContent: ""},
                            {"mData": "Comment", sDefaultContent: ""},
                            {"mData": "Assignee", sDefaultContent: ""},
                            {"mData": "Assignor", sDefaultContent: ""},
                            {"mData": "AssignDate", sDefaultContent: ""},
                            {"mData": "AssignStatus", sDefaultContent: ""},
                            {}
                        ],
                        responsive: {
                           details: {
                               display: $.fn.dataTable.Responsive.display.modal( {
                                   header: function ( row ) {
                                       var data = row.data();
                                       return 'Employer Details';
                                   }
                               } ),
                               renderer: $.fn.dataTable.Responsive.renderer.tableAll( {
                                   tableClass: 'table'
                               } )
                           }
                       },
                       columnDefs: [
                            {
                               "searchable": false,
                               "orderable": false,
                               "targets": -1
                            },{
                               "data": null,
                               "defaultContent": "",
                               "targets": -1
                            },
                            { targets : [5],
                              mRender : function (data, type, row, meta) {
                                    if(row.AssignStatus == "Initiated"){
                                        return '<button class="btn btn-danger">Initiated</button>';
                                    }else if(row.AssignStatus == "Assigned"){
                                        return '<button class="btn btn-warning">Assigned</button>';
                                    }else if(row.AssignStatus == "Cancelled"){
                                        return '<button class="btn btn-dark">Cancelled</button>';
                                    }else if(row.AssignStatus == "Resolved"){
                                        return '<button class="btn btn-success">Resolved</button>';
                                    }
                              }
                            },
                            { targets : [6],
                              mRender : function (data, type, row, meta) {
                                   return '<button type="button" class="btn btn-info" id="historyId" data-toggle="modal" data-id="'+row.HistoryID+'" data-target="#exampleModal" data-toggle="tooltip" title="View Attachment">View Attachment(s)</button>';
                              }
                            },
                        ],
                        "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                    });
                }
            }
            // initialize the datatables
            assetListVM.init();
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetRequestDocs", "Requests")'+ '?RequestId=' + RequestId,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $.each(data, function (index, item) {
                    console.log(item);
                    $.grep(item, function (docs, i){

                        //$('#attachmentHistoryDocs').html("");
                        if(docs.Doc != ""){
                            if(docs.Docext == ".jpg" || docs.Docext == ".jpeg" || docs.Docext == ".png" || docs.Docext == ".gif"){
                                var listDocs = '<li><h5><i class="fa fa-image fa-3x"></i> <a href='+docs.Doc+' target="_blank">'+docs.Docname+'</a></li>';
                            }else if(docs.Docext == ".pdf" || docs.Docext == ".doc" || docs.Docext == ".docx"){
                                var listDocs = '<li><h5><i class="fa fa-file fa-3x"></i> <a href='+docs.Doc+' target="_blank">'+docs.Docname+'</a></li>';
                            }else if(docs.Docext == ".csv" || docs.Docext == ".xls" || docs.Docext == ".xlsx"){
                                var listDocs = '<li><h5><i class="fa fa-file fa-3x"></i> <a href='+docs.Doc+' target="_blank">'+docs.Docname+'</a></li>';
                            }
                        }else{
                            var listDocs = '<li><h5>No Attachement</h5></li>';
                        }
                        $('#attachedDocuments ul').append(listDocs);
                    });
                });
            }
        });

        $(document).on('click', '#historyId', function(){
            var historyId = $(this).data("id");
            $("#historyID").val(historyId)
            $("#exampleModalLabel").html("History ID:" +historyId);

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetRequestHistoryDocs", "Requests")'+ '?historyId=' + historyId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $.each(data, function (index, item) {
                        $.grep(item, function (docs, i){

                            //$("#attachmentHistoryDocs ul").empty("");
                            if(docs.Doc != ""){
                                if(docs.Docext == ".jpg" || docs.Docext == ".jpeg" || docs.Docext == ".png" || docs.Docext == ".gif" ){
                                    var listDocs1 = '<li><h5><i class="fa fa-file fa-3x"></i> <a href='+docs.Doc+' target="_blank">'+docs.Docname+'</a></h5></li>';
                                }else if(docs.Docext == ".pdf"){
                                    var listDocs1 = '<li><h5><i class="fa fa-pdf fa-3x"></i> <a href='+docs.Doc+' target="_blank">'+docs.Docname+'</a></h5></li>';
                                }
                            }else{
                                var listDocs1 = '<li><h5>No Attachement</h5></li>';
                            }
                            console.log(listDocs1);
                            $('#attachmentHistoryDocs ul').empty().append(listDocs1);
                        });
                    });
                }
            });
        });
</script>
