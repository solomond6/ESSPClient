//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EmployerServicePortal.Crypto {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback formatGSMnum4SMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateGSMnumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetADDistributionLISTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetADDisplayName_SIAMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetADDisplayName_SIAML_nopassOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetADDisplayName_SIPMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetADDisplayName_SIPML_nopass_emailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetADDisplayName_SIAML_nopass_emailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeterrorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetADDisplayName_SIPML_nopassOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoNIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback buildstringOperationCompleted;
        
        private System.Threading.SendOrPostCallback logtokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback Completeit_OperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmtokenexemptOperationCompleted;
        
        private System.Threading.SendOrPostCallback createtokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ENCRYOperationCompleted;
        
        private System.Threading.SendOrPostCallback DECRYOperationCompleted;
        
        private System.Threading.SendOrPostCallback getsessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatesessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmpenaltybalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncryptfxOperationCompleted;
        
        private System.Threading.SendOrPostCallback DecryptfxOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::EmployerServicePortal.Properties.Settings.Default.EmployerServicePortal_Service1_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event formatGSMnum4SMSCompletedEventHandler formatGSMnum4SMSCompleted;
        
        /// <remarks/>
        public event ValidateGSMnumCompletedEventHandler ValidateGSMnumCompleted;
        
        /// <remarks/>
        public event GetADDistributionLISTCompletedEventHandler GetADDistributionLISTCompleted;
        
        /// <remarks/>
        public event GetADDisplayName_SIAMLCompletedEventHandler GetADDisplayName_SIAMLCompleted;
        
        /// <remarks/>
        public event GetADDisplayName_SIAML_nopassCompletedEventHandler GetADDisplayName_SIAML_nopassCompleted;
        
        /// <remarks/>
        public event GetADDisplayName_SIPMLCompletedEventHandler GetADDisplayName_SIPMLCompleted;
        
        /// <remarks/>
        public event GetADDisplayName_SIPML_nopass_emailCompletedEventHandler GetADDisplayName_SIPML_nopass_emailCompleted;
        
        /// <remarks/>
        public event GetADDisplayName_SIAML_nopass_emailCompletedEventHandler GetADDisplayName_SIAML_nopass_emailCompleted;
        
        /// <remarks/>
        public event GetTransStatusCompletedEventHandler GetTransStatusCompleted;
        
        /// <remarks/>
        public event GetTransDetailsCompletedEventHandler GetTransDetailsCompleted;
        
        /// <remarks/>
        public event GeterrorsCompletedEventHandler GeterrorsCompleted;
        
        /// <remarks/>
        public event GetADDisplayName_SIPML_nopassCompletedEventHandler GetADDisplayName_SIPML_nopassCompleted;
        
        /// <remarks/>
        public event DoNIPCompletedEventHandler DoNIPCompleted;
        
        /// <remarks/>
        public event buildstringCompletedEventHandler buildstringCompleted;
        
        /// <remarks/>
        public event logtokenCompletedEventHandler logtokenCompleted;
        
        /// <remarks/>
        public event Completeit_CompletedEventHandler Completeit_Completed;
        
        /// <remarks/>
        public event confirmtokenexemptCompletedEventHandler confirmtokenexemptCompleted;
        
        /// <remarks/>
        public event createtokenCompletedEventHandler createtokenCompleted;
        
        /// <remarks/>
        public event ENCRYCompletedEventHandler ENCRYCompleted;
        
        /// <remarks/>
        public event DECRYCompletedEventHandler DECRYCompleted;
        
        /// <remarks/>
        public event getsessionCompletedEventHandler getsessionCompleted;
        
        /// <remarks/>
        public event updatesessionCompletedEventHandler updatesessionCompleted;
        
        /// <remarks/>
        public event ConfirmpenaltybalanceCompletedEventHandler ConfirmpenaltybalanceCompleted;
        
        /// <remarks/>
        public event EncryptfxCompletedEventHandler EncryptfxCompleted;
        
        /// <remarks/>
        public event DecryptfxCompletedEventHandler DecryptfxCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/formatGSMnum4SMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string formatGSMnum4SMS(string Phone_num) {
            object[] results = this.Invoke("formatGSMnum4SMS", new object[] {
                        Phone_num});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void formatGSMnum4SMSAsync(string Phone_num) {
            this.formatGSMnum4SMSAsync(Phone_num, null);
        }
        
        /// <remarks/>
        public void formatGSMnum4SMSAsync(string Phone_num, object userState) {
            if ((this.formatGSMnum4SMSOperationCompleted == null)) {
                this.formatGSMnum4SMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnformatGSMnum4SMSOperationCompleted);
            }
            this.InvokeAsync("formatGSMnum4SMS", new object[] {
                        Phone_num}, this.formatGSMnum4SMSOperationCompleted, userState);
        }
        
        private void OnformatGSMnum4SMSOperationCompleted(object arg) {
            if ((this.formatGSMnum4SMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.formatGSMnum4SMSCompleted(this, new formatGSMnum4SMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateGSMnum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateGSMnum(string Phone_num) {
            object[] results = this.Invoke("ValidateGSMnum", new object[] {
                        Phone_num});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateGSMnumAsync(string Phone_num) {
            this.ValidateGSMnumAsync(Phone_num, null);
        }
        
        /// <remarks/>
        public void ValidateGSMnumAsync(string Phone_num, object userState) {
            if ((this.ValidateGSMnumOperationCompleted == null)) {
                this.ValidateGSMnumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateGSMnumOperationCompleted);
            }
            this.InvokeAsync("ValidateGSMnum", new object[] {
                        Phone_num}, this.ValidateGSMnumOperationCompleted, userState);
        }
        
        private void OnValidateGSMnumOperationCompleted(object arg) {
            if ((this.ValidateGSMnumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateGSMnumCompleted(this, new ValidateGSMnumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetADDistributionLIST", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetADDistributionLIST(string UserName, string Password) {
            object[] results = this.Invoke("GetADDistributionLIST", new object[] {
                        UserName,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetADDistributionLISTAsync(string UserName, string Password) {
            this.GetADDistributionLISTAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void GetADDistributionLISTAsync(string UserName, string Password, object userState) {
            if ((this.GetADDistributionLISTOperationCompleted == null)) {
                this.GetADDistributionLISTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetADDistributionLISTOperationCompleted);
            }
            this.InvokeAsync("GetADDistributionLIST", new object[] {
                        UserName,
                        Password}, this.GetADDistributionLISTOperationCompleted, userState);
        }
        
        private void OnGetADDistributionLISTOperationCompleted(object arg) {
            if ((this.GetADDistributionLISTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetADDistributionLISTCompleted(this, new GetADDistributionLISTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetADDisplayName_SIAML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetADDisplayName_SIAML(string UserName, string Password) {
            object[] results = this.Invoke("GetADDisplayName_SIAML", new object[] {
                        UserName,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetADDisplayName_SIAMLAsync(string UserName, string Password) {
            this.GetADDisplayName_SIAMLAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void GetADDisplayName_SIAMLAsync(string UserName, string Password, object userState) {
            if ((this.GetADDisplayName_SIAMLOperationCompleted == null)) {
                this.GetADDisplayName_SIAMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetADDisplayName_SIAMLOperationCompleted);
            }
            this.InvokeAsync("GetADDisplayName_SIAML", new object[] {
                        UserName,
                        Password}, this.GetADDisplayName_SIAMLOperationCompleted, userState);
        }
        
        private void OnGetADDisplayName_SIAMLOperationCompleted(object arg) {
            if ((this.GetADDisplayName_SIAMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetADDisplayName_SIAMLCompleted(this, new GetADDisplayName_SIAMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetADDisplayName_SIAML_nopass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetADDisplayName_SIAML_nopass(string UserName) {
            object[] results = this.Invoke("GetADDisplayName_SIAML_nopass", new object[] {
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetADDisplayName_SIAML_nopassAsync(string UserName) {
            this.GetADDisplayName_SIAML_nopassAsync(UserName, null);
        }
        
        /// <remarks/>
        public void GetADDisplayName_SIAML_nopassAsync(string UserName, object userState) {
            if ((this.GetADDisplayName_SIAML_nopassOperationCompleted == null)) {
                this.GetADDisplayName_SIAML_nopassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetADDisplayName_SIAML_nopassOperationCompleted);
            }
            this.InvokeAsync("GetADDisplayName_SIAML_nopass", new object[] {
                        UserName}, this.GetADDisplayName_SIAML_nopassOperationCompleted, userState);
        }
        
        private void OnGetADDisplayName_SIAML_nopassOperationCompleted(object arg) {
            if ((this.GetADDisplayName_SIAML_nopassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetADDisplayName_SIAML_nopassCompleted(this, new GetADDisplayName_SIAML_nopassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetADDisplayName_SIPML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetADDisplayName_SIPML(string UserName, string Password) {
            object[] results = this.Invoke("GetADDisplayName_SIPML", new object[] {
                        UserName,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetADDisplayName_SIPMLAsync(string UserName, string Password) {
            this.GetADDisplayName_SIPMLAsync(UserName, Password, null);
        }
        
        /// <remarks/>
        public void GetADDisplayName_SIPMLAsync(string UserName, string Password, object userState) {
            if ((this.GetADDisplayName_SIPMLOperationCompleted == null)) {
                this.GetADDisplayName_SIPMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetADDisplayName_SIPMLOperationCompleted);
            }
            this.InvokeAsync("GetADDisplayName_SIPML", new object[] {
                        UserName,
                        Password}, this.GetADDisplayName_SIPMLOperationCompleted, userState);
        }
        
        private void OnGetADDisplayName_SIPMLOperationCompleted(object arg) {
            if ((this.GetADDisplayName_SIPMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetADDisplayName_SIPMLCompleted(this, new GetADDisplayName_SIPMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetADDisplayName_SIPML_nopass_email", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetADDisplayName_SIPML_nopass_email(string UserName) {
            object[] results = this.Invoke("GetADDisplayName_SIPML_nopass_email", new object[] {
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetADDisplayName_SIPML_nopass_emailAsync(string UserName) {
            this.GetADDisplayName_SIPML_nopass_emailAsync(UserName, null);
        }
        
        /// <remarks/>
        public void GetADDisplayName_SIPML_nopass_emailAsync(string UserName, object userState) {
            if ((this.GetADDisplayName_SIPML_nopass_emailOperationCompleted == null)) {
                this.GetADDisplayName_SIPML_nopass_emailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetADDisplayName_SIPML_nopass_emailOperationCompleted);
            }
            this.InvokeAsync("GetADDisplayName_SIPML_nopass_email", new object[] {
                        UserName}, this.GetADDisplayName_SIPML_nopass_emailOperationCompleted, userState);
        }
        
        private void OnGetADDisplayName_SIPML_nopass_emailOperationCompleted(object arg) {
            if ((this.GetADDisplayName_SIPML_nopass_emailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetADDisplayName_SIPML_nopass_emailCompleted(this, new GetADDisplayName_SIPML_nopass_emailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetADDisplayName_SIAML_nopass_email", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetADDisplayName_SIAML_nopass_email(string UserName) {
            object[] results = this.Invoke("GetADDisplayName_SIAML_nopass_email", new object[] {
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetADDisplayName_SIAML_nopass_emailAsync(string UserName) {
            this.GetADDisplayName_SIAML_nopass_emailAsync(UserName, null);
        }
        
        /// <remarks/>
        public void GetADDisplayName_SIAML_nopass_emailAsync(string UserName, object userState) {
            if ((this.GetADDisplayName_SIAML_nopass_emailOperationCompleted == null)) {
                this.GetADDisplayName_SIAML_nopass_emailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetADDisplayName_SIAML_nopass_emailOperationCompleted);
            }
            this.InvokeAsync("GetADDisplayName_SIAML_nopass_email", new object[] {
                        UserName}, this.GetADDisplayName_SIAML_nopass_emailOperationCompleted, userState);
        }
        
        private void OnGetADDisplayName_SIAML_nopass_emailOperationCompleted(object arg) {
            if ((this.GetADDisplayName_SIAML_nopass_emailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetADDisplayName_SIAML_nopass_emailCompleted(this, new GetADDisplayName_SIAML_nopass_emailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTransStatus(string OrderID, string MerchantID) {
            object[] results = this.Invoke("GetTransStatus", new object[] {
                        OrderID,
                        MerchantID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransStatusAsync(string OrderID, string MerchantID) {
            this.GetTransStatusAsync(OrderID, MerchantID, null);
        }
        
        /// <remarks/>
        public void GetTransStatusAsync(string OrderID, string MerchantID, object userState) {
            if ((this.GetTransStatusOperationCompleted == null)) {
                this.GetTransStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransStatusOperationCompleted);
            }
            this.InvokeAsync("GetTransStatus", new object[] {
                        OrderID,
                        MerchantID}, this.GetTransStatusOperationCompleted, userState);
        }
        
        private void OnGetTransStatusOperationCompleted(object arg) {
            if ((this.GetTransStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransStatusCompleted(this, new GetTransStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTransDetails(string OrderID, string MerchantID) {
            object[] results = this.Invoke("GetTransDetails", new object[] {
                        OrderID,
                        MerchantID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransDetailsAsync(string OrderID, string MerchantID) {
            this.GetTransDetailsAsync(OrderID, MerchantID, null);
        }
        
        /// <remarks/>
        public void GetTransDetailsAsync(string OrderID, string MerchantID, object userState) {
            if ((this.GetTransDetailsOperationCompleted == null)) {
                this.GetTransDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransDetailsOperationCompleted);
            }
            this.InvokeAsync("GetTransDetails", new object[] {
                        OrderID,
                        MerchantID}, this.GetTransDetailsOperationCompleted, userState);
        }
        
        private void OnGetTransDetailsOperationCompleted(object arg) {
            if ((this.GetTransDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransDetailsCompleted(this, new GetTransDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Geterrors", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Geterrors(string OrderID, string MerchantID, string uno) {
            object[] results = this.Invoke("Geterrors", new object[] {
                        OrderID,
                        MerchantID,
                        uno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeterrorsAsync(string OrderID, string MerchantID, string uno) {
            this.GeterrorsAsync(OrderID, MerchantID, uno, null);
        }
        
        /// <remarks/>
        public void GeterrorsAsync(string OrderID, string MerchantID, string uno, object userState) {
            if ((this.GeterrorsOperationCompleted == null)) {
                this.GeterrorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeterrorsOperationCompleted);
            }
            this.InvokeAsync("Geterrors", new object[] {
                        OrderID,
                        MerchantID,
                        uno}, this.GeterrorsOperationCompleted, userState);
        }
        
        private void OnGeterrorsOperationCompleted(object arg) {
            if ((this.GeterrorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeterrorsCompleted(this, new GeterrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetADDisplayName_SIPML_nopass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetADDisplayName_SIPML_nopass(string UserName) {
            object[] results = this.Invoke("GetADDisplayName_SIPML_nopass", new object[] {
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetADDisplayName_SIPML_nopassAsync(string UserName) {
            this.GetADDisplayName_SIPML_nopassAsync(UserName, null);
        }
        
        /// <remarks/>
        public void GetADDisplayName_SIPML_nopassAsync(string UserName, object userState) {
            if ((this.GetADDisplayName_SIPML_nopassOperationCompleted == null)) {
                this.GetADDisplayName_SIPML_nopassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetADDisplayName_SIPML_nopassOperationCompleted);
            }
            this.InvokeAsync("GetADDisplayName_SIPML_nopass", new object[] {
                        UserName}, this.GetADDisplayName_SIPML_nopassOperationCompleted, userState);
        }
        
        private void OnGetADDisplayName_SIPML_nopassOperationCompleted(object arg) {
            if ((this.GetADDisplayName_SIPML_nopassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetADDisplayName_SIPML_nopassCompleted(this, new GetADDisplayName_SIPML_nopassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DoNIP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DoNIP(string AccountNumber, string DestinationBankCode) {
            object[] results = this.Invoke("DoNIP", new object[] {
                        AccountNumber,
                        DestinationBankCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoNIPAsync(string AccountNumber, string DestinationBankCode) {
            this.DoNIPAsync(AccountNumber, DestinationBankCode, null);
        }
        
        /// <remarks/>
        public void DoNIPAsync(string AccountNumber, string DestinationBankCode, object userState) {
            if ((this.DoNIPOperationCompleted == null)) {
                this.DoNIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoNIPOperationCompleted);
            }
            this.InvokeAsync("DoNIP", new object[] {
                        AccountNumber,
                        DestinationBankCode}, this.DoNIPOperationCompleted, userState);
        }
        
        private void OnDoNIPOperationCompleted(object arg) {
            if ((this.DoNIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoNIPCompleted(this, new DoNIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/buildstring", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string buildstring(string tkt, string fname, string eacct) {
            object[] results = this.Invoke("buildstring", new object[] {
                        tkt,
                        fname,
                        eacct});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void buildstringAsync(string tkt, string fname, string eacct) {
            this.buildstringAsync(tkt, fname, eacct, null);
        }
        
        /// <remarks/>
        public void buildstringAsync(string tkt, string fname, string eacct, object userState) {
            if ((this.buildstringOperationCompleted == null)) {
                this.buildstringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbuildstringOperationCompleted);
            }
            this.InvokeAsync("buildstring", new object[] {
                        tkt,
                        fname,
                        eacct}, this.buildstringOperationCompleted, userState);
        }
        
        private void OnbuildstringOperationCompleted(object arg) {
            if ((this.buildstringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.buildstringCompleted(this, new buildstringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/logtoken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string logtoken(string user, string ftype, string tk, string amt, string proctocall, string penalty, string bcode, string bname, string cname, string trsfacct, string thisref) {
            object[] results = this.Invoke("logtoken", new object[] {
                        user,
                        ftype,
                        tk,
                        amt,
                        proctocall,
                        penalty,
                        bcode,
                        bname,
                        cname,
                        trsfacct,
                        thisref});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void logtokenAsync(string user, string ftype, string tk, string amt, string proctocall, string penalty, string bcode, string bname, string cname, string trsfacct, string thisref) {
            this.logtokenAsync(user, ftype, tk, amt, proctocall, penalty, bcode, bname, cname, trsfacct, thisref, null);
        }
        
        /// <remarks/>
        public void logtokenAsync(string user, string ftype, string tk, string amt, string proctocall, string penalty, string bcode, string bname, string cname, string trsfacct, string thisref, object userState) {
            if ((this.logtokenOperationCompleted == null)) {
                this.logtokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogtokenOperationCompleted);
            }
            this.InvokeAsync("logtoken", new object[] {
                        user,
                        ftype,
                        tk,
                        amt,
                        proctocall,
                        penalty,
                        bcode,
                        bname,
                        cname,
                        trsfacct,
                        thisref}, this.logtokenOperationCompleted, userState);
        }
        
        private void OnlogtokenOperationCompleted(object arg) {
            if ((this.logtokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logtokenCompleted(this, new logtokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Completeit_", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Completeit_(string user, string ftype, string tk, string amt, string penalty, string bcode, string bname, string cname, string trsfacct, string thisref) {
            object[] results = this.Invoke("Completeit_", new object[] {
                        user,
                        ftype,
                        tk,
                        amt,
                        penalty,
                        bcode,
                        bname,
                        cname,
                        trsfacct,
                        thisref});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Completeit_Async(string user, string ftype, string tk, string amt, string penalty, string bcode, string bname, string cname, string trsfacct, string thisref) {
            this.Completeit_Async(user, ftype, tk, amt, penalty, bcode, bname, cname, trsfacct, thisref, null);
        }
        
        /// <remarks/>
        public void Completeit_Async(string user, string ftype, string tk, string amt, string penalty, string bcode, string bname, string cname, string trsfacct, string thisref, object userState) {
            if ((this.Completeit_OperationCompleted == null)) {
                this.Completeit_OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteit_OperationCompleted);
            }
            this.InvokeAsync("Completeit_", new object[] {
                        user,
                        ftype,
                        tk,
                        amt,
                        penalty,
                        bcode,
                        bname,
                        cname,
                        trsfacct,
                        thisref}, this.Completeit_OperationCompleted, userState);
        }
        
        private void OnCompleteit_OperationCompleted(object arg) {
            if ((this.Completeit_Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Completeit_Completed(this, new Completeit_CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/confirmtokenexempt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool confirmtokenexempt(string eacct) {
            object[] results = this.Invoke("confirmtokenexempt", new object[] {
                        eacct});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void confirmtokenexemptAsync(string eacct) {
            this.confirmtokenexemptAsync(eacct, null);
        }
        
        /// <remarks/>
        public void confirmtokenexemptAsync(string eacct, object userState) {
            if ((this.confirmtokenexemptOperationCompleted == null)) {
                this.confirmtokenexemptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmtokenexemptOperationCompleted);
            }
            this.InvokeAsync("confirmtokenexempt", new object[] {
                        eacct}, this.confirmtokenexemptOperationCompleted, userState);
        }
        
        private void OnconfirmtokenexemptOperationCompleted(object arg) {
            if ((this.confirmtokenexemptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmtokenexemptCompleted(this, new confirmtokenexemptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createtoken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string createtoken() {
            object[] results = this.Invoke("createtoken", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createtokenAsync() {
            this.createtokenAsync(null);
        }
        
        /// <remarks/>
        public void createtokenAsync(object userState) {
            if ((this.createtokenOperationCompleted == null)) {
                this.createtokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatetokenOperationCompleted);
            }
            this.InvokeAsync("createtoken", new object[0], this.createtokenOperationCompleted, userState);
        }
        
        private void OncreatetokenOperationCompleted(object arg) {
            if ((this.createtokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createtokenCompleted(this, new createtokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ENCRY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ENCRY(string toks) {
            object[] results = this.Invoke("ENCRY", new object[] {
                        toks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ENCRYAsync(string toks) {
            this.ENCRYAsync(toks, null);
        }
        
        /// <remarks/>
        public void ENCRYAsync(string toks, object userState) {
            if ((this.ENCRYOperationCompleted == null)) {
                this.ENCRYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnENCRYOperationCompleted);
            }
            this.InvokeAsync("ENCRY", new object[] {
                        toks}, this.ENCRYOperationCompleted, userState);
        }
        
        private void OnENCRYOperationCompleted(object arg) {
            if ((this.ENCRYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ENCRYCompleted(this, new ENCRYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DECRY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DECRY(string entoks) {
            object[] results = this.Invoke("DECRY", new object[] {
                        entoks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DECRYAsync(string entoks) {
            this.DECRYAsync(entoks, null);
        }
        
        /// <remarks/>
        public void DECRYAsync(string entoks, object userState) {
            if ((this.DECRYOperationCompleted == null)) {
                this.DECRYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDECRYOperationCompleted);
            }
            this.InvokeAsync("DECRY", new object[] {
                        entoks}, this.DECRYOperationCompleted, userState);
        }
        
        private void OnDECRYOperationCompleted(object arg) {
            if ((this.DECRYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DECRYCompleted(this, new DECRYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getsession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getsession(string sessid, string eacct, string uniqsno) {
            object[] results = this.Invoke("getsession", new object[] {
                        sessid,
                        eacct,
                        uniqsno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getsessionAsync(string sessid, string eacct, string uniqsno) {
            this.getsessionAsync(sessid, eacct, uniqsno, null);
        }
        
        /// <remarks/>
        public void getsessionAsync(string sessid, string eacct, string uniqsno, object userState) {
            if ((this.getsessionOperationCompleted == null)) {
                this.getsessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetsessionOperationCompleted);
            }
            this.InvokeAsync("getsession", new object[] {
                        sessid,
                        eacct,
                        uniqsno}, this.getsessionOperationCompleted, userState);
        }
        
        private void OngetsessionOperationCompleted(object arg) {
            if ((this.getsessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getsessionCompleted(this, new getsessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatesession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updatesession(string sessid, string eacct, string uniqsno) {
            this.Invoke("updatesession", new object[] {
                        sessid,
                        eacct,
                        uniqsno});
        }
        
        /// <remarks/>
        public void updatesessionAsync(string sessid, string eacct, string uniqsno) {
            this.updatesessionAsync(sessid, eacct, uniqsno, null);
        }
        
        /// <remarks/>
        public void updatesessionAsync(string sessid, string eacct, string uniqsno, object userState) {
            if ((this.updatesessionOperationCompleted == null)) {
                this.updatesessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatesessionOperationCompleted);
            }
            this.InvokeAsync("updatesession", new object[] {
                        sessid,
                        eacct,
                        uniqsno}, this.updatesessionOperationCompleted, userState);
        }
        
        private void OnupdatesessionOperationCompleted(object arg) {
            if ((this.updatesessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatesessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Confirmpenaltybalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Confirmpenaltybalance(string Amt, string fid, string eact, string dys) {
            object[] results = this.Invoke("Confirmpenaltybalance", new object[] {
                        Amt,
                        fid,
                        eact,
                        dys});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmpenaltybalanceAsync(string Amt, string fid, string eact, string dys) {
            this.ConfirmpenaltybalanceAsync(Amt, fid, eact, dys, null);
        }
        
        /// <remarks/>
        public void ConfirmpenaltybalanceAsync(string Amt, string fid, string eact, string dys, object userState) {
            if ((this.ConfirmpenaltybalanceOperationCompleted == null)) {
                this.ConfirmpenaltybalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmpenaltybalanceOperationCompleted);
            }
            this.InvokeAsync("Confirmpenaltybalance", new object[] {
                        Amt,
                        fid,
                        eact,
                        dys}, this.ConfirmpenaltybalanceOperationCompleted, userState);
        }
        
        private void OnConfirmpenaltybalanceOperationCompleted(object arg) {
            if ((this.ConfirmpenaltybalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmpenaltybalanceCompleted(this, new ConfirmpenaltybalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Encryptfx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Encryptfx(string expression, string key) {
            object[] results = this.Invoke("Encryptfx", new object[] {
                        expression,
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EncryptfxAsync(string expression, string key) {
            this.EncryptfxAsync(expression, key, null);
        }
        
        /// <remarks/>
        public void EncryptfxAsync(string expression, string key, object userState) {
            if ((this.EncryptfxOperationCompleted == null)) {
                this.EncryptfxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncryptfxOperationCompleted);
            }
            this.InvokeAsync("Encryptfx", new object[] {
                        expression,
                        key}, this.EncryptfxOperationCompleted, userState);
        }
        
        private void OnEncryptfxOperationCompleted(object arg) {
            if ((this.EncryptfxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncryptfxCompleted(this, new EncryptfxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Decryptfx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Decryptfx(string expression, string key) {
            object[] results = this.Invoke("Decryptfx", new object[] {
                        expression,
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DecryptfxAsync(string expression, string key) {
            this.DecryptfxAsync(expression, key, null);
        }
        
        /// <remarks/>
        public void DecryptfxAsync(string expression, string key, object userState) {
            if ((this.DecryptfxOperationCompleted == null)) {
                this.DecryptfxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecryptfxOperationCompleted);
            }
            this.InvokeAsync("Decryptfx", new object[] {
                        expression,
                        key}, this.DecryptfxOperationCompleted, userState);
        }
        
        private void OnDecryptfxOperationCompleted(object arg) {
            if ((this.DecryptfxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecryptfxCompleted(this, new DecryptfxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void formatGSMnum4SMSCompletedEventHandler(object sender, formatGSMnum4SMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class formatGSMnum4SMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal formatGSMnum4SMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ValidateGSMnumCompletedEventHandler(object sender, ValidateGSMnumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateGSMnumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateGSMnumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetADDistributionLISTCompletedEventHandler(object sender, GetADDistributionLISTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetADDistributionLISTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetADDistributionLISTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetADDisplayName_SIAMLCompletedEventHandler(object sender, GetADDisplayName_SIAMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetADDisplayName_SIAMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetADDisplayName_SIAMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetADDisplayName_SIAML_nopassCompletedEventHandler(object sender, GetADDisplayName_SIAML_nopassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetADDisplayName_SIAML_nopassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetADDisplayName_SIAML_nopassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetADDisplayName_SIPMLCompletedEventHandler(object sender, GetADDisplayName_SIPMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetADDisplayName_SIPMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetADDisplayName_SIPMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetADDisplayName_SIPML_nopass_emailCompletedEventHandler(object sender, GetADDisplayName_SIPML_nopass_emailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetADDisplayName_SIPML_nopass_emailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetADDisplayName_SIPML_nopass_emailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetADDisplayName_SIAML_nopass_emailCompletedEventHandler(object sender, GetADDisplayName_SIAML_nopass_emailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetADDisplayName_SIAML_nopass_emailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetADDisplayName_SIAML_nopass_emailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTransStatusCompletedEventHandler(object sender, GetTransStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTransDetailsCompletedEventHandler(object sender, GetTransDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GeterrorsCompletedEventHandler(object sender, GeterrorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeterrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeterrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetADDisplayName_SIPML_nopassCompletedEventHandler(object sender, GetADDisplayName_SIPML_nopassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetADDisplayName_SIPML_nopassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetADDisplayName_SIPML_nopassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DoNIPCompletedEventHandler(object sender, DoNIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoNIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoNIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void buildstringCompletedEventHandler(object sender, buildstringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class buildstringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal buildstringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void logtokenCompletedEventHandler(object sender, logtokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logtokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logtokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Completeit_CompletedEventHandler(object sender, Completeit_CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Completeit_CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Completeit_CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void confirmtokenexemptCompletedEventHandler(object sender, confirmtokenexemptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class confirmtokenexemptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmtokenexemptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createtokenCompletedEventHandler(object sender, createtokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createtokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createtokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ENCRYCompletedEventHandler(object sender, ENCRYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ENCRYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ENCRYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DECRYCompletedEventHandler(object sender, DECRYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DECRYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DECRYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getsessionCompletedEventHandler(object sender, getsessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getsessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getsessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void updatesessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ConfirmpenaltybalanceCompletedEventHandler(object sender, ConfirmpenaltybalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmpenaltybalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmpenaltybalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void EncryptfxCompletedEventHandler(object sender, EncryptfxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncryptfxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncryptfxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DecryptfxCompletedEventHandler(object sender, DecryptfxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecryptfxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecryptfxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591