//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EmployerServicePortal.Util {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UtilSoap", Namespace="http://tempuri.org/")]
    public partial class Util : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendlatestBenefitOperationCompleted;
        
        private System.Threading.SendOrPostCallback LastthreetxnOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback PensionElectronicDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogestatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidatetokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback TokengeneratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback PensiondocSender_datedOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogNpsOperationCompleted;
        
        private System.Threading.SendOrPostCallback cleanamterOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetchdata_addendumOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchtxnOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatevaluestestOperationCompleted;
        
        private System.Threading.SendOrPostCallback LgaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Benefit_App_SetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback Benefit_StateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Benefit_StanbicLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Benefit_ApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Benefit_AppPrevInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Benefit_CreateAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback Contributions_Within_PeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback FundPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Contributions_As_At_PeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback BenefitAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DateTimeConverterOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendtext_pensionOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendtext_pension_newOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBioDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsValidcontactOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBanksOperationCompleted;
        
        private System.Threading.SendOrPostCallback PensionLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_SessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchPRCOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetchstatement_multiformat_testOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchstatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetchstatement_multiformatOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetchstatement_multiformat_fidOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Util() {
            this.Url = global::EmployerServicePortal.Properties.Settings.Default.EmployerServicePortal_Util_Util;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendlatestBenefitCompletedEventHandler SendlatestBenefitCompleted;
        
        /// <remarks/>
        public event LastthreetxnCompletedEventHandler LastthreetxnCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event PensionElectronicDocsCompletedEventHandler PensionElectronicDocsCompleted;
        
        /// <remarks/>
        public event LogestatementCompletedEventHandler LogestatementCompleted;
        
        /// <remarks/>
        public event ValidatetokenCompletedEventHandler ValidatetokenCompleted;
        
        /// <remarks/>
        public event TokengeneratorCompletedEventHandler TokengeneratorCompleted;
        
        /// <remarks/>
        public event PensiondocSender_datedCompletedEventHandler PensiondocSender_datedCompleted;
        
        /// <remarks/>
        public event LogNpsCompletedEventHandler LogNpsCompleted;
        
        /// <remarks/>
        public event cleanamterCompletedEventHandler cleanamterCompleted;
        
        /// <remarks/>
        public event Fetchdata_addendumCompletedEventHandler Fetchdata_addendumCompleted;
        
        /// <remarks/>
        public event FetchtxnCompletedEventHandler FetchtxnCompleted;
        
        /// <remarks/>
        public event StatesCompletedEventHandler StatesCompleted;
        
        /// <remarks/>
        public event updatevaluestestCompletedEventHandler updatevaluestestCompleted;
        
        /// <remarks/>
        public event LgaCompletedEventHandler LgaCompleted;
        
        /// <remarks/>
        public event Benefit_App_SetupCompletedEventHandler Benefit_App_SetupCompleted;
        
        /// <remarks/>
        public event Benefit_StateCompletedEventHandler Benefit_StateCompleted;
        
        /// <remarks/>
        public event Benefit_StanbicLocationCompletedEventHandler Benefit_StanbicLocationCompleted;
        
        /// <remarks/>
        public event Benefit_ApplicationCompletedEventHandler Benefit_ApplicationCompleted;
        
        /// <remarks/>
        public event Benefit_AppPrevInstanceCompletedEventHandler Benefit_AppPrevInstanceCompleted;
        
        /// <remarks/>
        public event Benefit_CreateAppCompletedEventHandler Benefit_CreateAppCompleted;
        
        /// <remarks/>
        public event Contributions_Within_PeriodCompletedEventHandler Contributions_Within_PeriodCompleted;
        
        /// <remarks/>
        public event FundPriceCompletedEventHandler FundPriceCompleted;
        
        /// <remarks/>
        public event Contributions_As_At_PeriodCompletedEventHandler Contributions_As_At_PeriodCompleted;
        
        /// <remarks/>
        public event BenefitAppCompletedEventHandler BenefitAppCompleted;
        
        /// <remarks/>
        public event FetchdataCompletedEventHandler FetchdataCompleted;
        
        /// <remarks/>
        public event DateTimeConverterCompletedEventHandler DateTimeConverterCompleted;
        
        /// <remarks/>
        public event sendtext_pensionCompletedEventHandler sendtext_pensionCompleted;
        
        /// <remarks/>
        public event sendtext_pension_newCompletedEventHandler sendtext_pension_newCompleted;
        
        /// <remarks/>
        public event UpdateBioDataCompletedEventHandler UpdateBioDataCompleted;
        
        /// <remarks/>
        public event IsValidcontactCompletedEventHandler IsValidcontactCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event GetBanksCompletedEventHandler GetBanksCompleted;
        
        /// <remarks/>
        public event PensionLoginCompletedEventHandler PensionLoginCompleted;
        
        /// <remarks/>
        public event Get_SessionCompletedEventHandler Get_SessionCompleted;
        
        /// <remarks/>
        public event FetchPRCCompletedEventHandler FetchPRCCompleted;
        
        /// <remarks/>
        public event Fetchstatement_multiformat_testCompletedEventHandler Fetchstatement_multiformat_testCompleted;
        
        /// <remarks/>
        public event FetchstatementCompletedEventHandler FetchstatementCompleted;
        
        /// <remarks/>
        public event Fetchstatement_multiformatCompletedEventHandler Fetchstatement_multiformatCompleted;
        
        /// <remarks/>
        public event Fetchstatement_multiformat_fidCompletedEventHandler Fetchstatement_multiformat_fidCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendlatestBenefit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendlatestBenefit(string Pin, string BrowserUsed, string SrcChannel, string userkey, string uid) {
            this.Invoke("SendlatestBenefit", new object[] {
                        Pin,
                        BrowserUsed,
                        SrcChannel,
                        userkey,
                        uid});
        }
        
        /// <remarks/>
        public void SendlatestBenefitAsync(string Pin, string BrowserUsed, string SrcChannel, string userkey, string uid) {
            this.SendlatestBenefitAsync(Pin, BrowserUsed, SrcChannel, userkey, uid, null);
        }
        
        /// <remarks/>
        public void SendlatestBenefitAsync(string Pin, string BrowserUsed, string SrcChannel, string userkey, string uid, object userState) {
            if ((this.SendlatestBenefitOperationCompleted == null)) {
                this.SendlatestBenefitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendlatestBenefitOperationCompleted);
            }
            this.InvokeAsync("SendlatestBenefit", new object[] {
                        Pin,
                        BrowserUsed,
                        SrcChannel,
                        userkey,
                        uid}, this.SendlatestBenefitOperationCompleted, userState);
        }
        
        private void OnSendlatestBenefitOperationCompleted(object arg) {
            if ((this.SendlatestBenefitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendlatestBenefitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Lastthreetxn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Lastthreetxn(string Pin, string SrcChannel, string userkey, string uid) {
            this.Invoke("Lastthreetxn", new object[] {
                        Pin,
                        SrcChannel,
                        userkey,
                        uid});
        }
        
        /// <remarks/>
        public void LastthreetxnAsync(string Pin, string SrcChannel, string userkey, string uid) {
            this.LastthreetxnAsync(Pin, SrcChannel, userkey, uid, null);
        }
        
        /// <remarks/>
        public void LastthreetxnAsync(string Pin, string SrcChannel, string userkey, string uid, object userState) {
            if ((this.LastthreetxnOperationCompleted == null)) {
                this.LastthreetxnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLastthreetxnOperationCompleted);
            }
            this.InvokeAsync("Lastthreetxn", new object[] {
                        Pin,
                        SrcChannel,
                        userkey,
                        uid}, this.LastthreetxnOperationCompleted, userState);
        }
        
        private void OnLastthreetxnOperationCompleted(object arg) {
            if ((this.LastthreetxnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LastthreetxnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangePassword(string Pin, string BrowserUsed, string type, string oldpassword, string newpassword, string SrcChannel, string userkey, string uid) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        Pin,
                        BrowserUsed,
                        type,
                        oldpassword,
                        newpassword,
                        SrcChannel,
                        userkey,
                        uid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string Pin, string BrowserUsed, string type, string oldpassword, string newpassword, string SrcChannel, string userkey, string uid) {
            this.ChangePasswordAsync(Pin, BrowserUsed, type, oldpassword, newpassword, SrcChannel, userkey, uid, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string Pin, string BrowserUsed, string type, string oldpassword, string newpassword, string SrcChannel, string userkey, string uid, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        Pin,
                        BrowserUsed,
                        type,
                        oldpassword,
                        newpassword,
                        SrcChannel,
                        userkey,
                        uid}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PensionElectronicDocs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PensionElectronicDocs(string Pin, string Doctype, string SrcChannel, string userkey, string uid) {
            object[] results = this.Invoke("PensionElectronicDocs", new object[] {
                        Pin,
                        Doctype,
                        SrcChannel,
                        userkey,
                        uid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PensionElectronicDocsAsync(string Pin, string Doctype, string SrcChannel, string userkey, string uid) {
            this.PensionElectronicDocsAsync(Pin, Doctype, SrcChannel, userkey, uid, null);
        }
        
        /// <remarks/>
        public void PensionElectronicDocsAsync(string Pin, string Doctype, string SrcChannel, string userkey, string uid, object userState) {
            if ((this.PensionElectronicDocsOperationCompleted == null)) {
                this.PensionElectronicDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPensionElectronicDocsOperationCompleted);
            }
            this.InvokeAsync("PensionElectronicDocs", new object[] {
                        Pin,
                        Doctype,
                        SrcChannel,
                        userkey,
                        uid}, this.PensionElectronicDocsOperationCompleted, userState);
        }
        
        private void OnPensionElectronicDocsOperationCompleted(object arg) {
            if ((this.PensionElectronicDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PensionElectronicDocsCompleted(this, new PensionElectronicDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Logestatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Logestatement(string Pin, string Phone, string SrcChannel, string userkey, string uid) {
            object[] results = this.Invoke("Logestatement", new object[] {
                        Pin,
                        Phone,
                        SrcChannel,
                        userkey,
                        uid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LogestatementAsync(string Pin, string Phone, string SrcChannel, string userkey, string uid) {
            this.LogestatementAsync(Pin, Phone, SrcChannel, userkey, uid, null);
        }
        
        /// <remarks/>
        public void LogestatementAsync(string Pin, string Phone, string SrcChannel, string userkey, string uid, object userState) {
            if ((this.LogestatementOperationCompleted == null)) {
                this.LogestatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogestatementOperationCompleted);
            }
            this.InvokeAsync("Logestatement", new object[] {
                        Pin,
                        Phone,
                        SrcChannel,
                        userkey,
                        uid}, this.LogestatementOperationCompleted, userState);
        }
        
        private void OnLogestatementOperationCompleted(object arg) {
            if ((this.LogestatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogestatementCompleted(this, new LogestatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Validatetoken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Validatetoken(string Pin, string sessionID, string token, string userkey, string uid) {
            object[] results = this.Invoke("Validatetoken", new object[] {
                        Pin,
                        sessionID,
                        token,
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValidatetokenAsync(string Pin, string sessionID, string token, string userkey, string uid) {
            this.ValidatetokenAsync(Pin, sessionID, token, userkey, uid, null);
        }
        
        /// <remarks/>
        public void ValidatetokenAsync(string Pin, string sessionID, string token, string userkey, string uid, object userState) {
            if ((this.ValidatetokenOperationCompleted == null)) {
                this.ValidatetokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidatetokenOperationCompleted);
            }
            this.InvokeAsync("Validatetoken", new object[] {
                        Pin,
                        sessionID,
                        token,
                        userkey,
                        uid}, this.ValidatetokenOperationCompleted, userState);
        }
        
        private void OnValidatetokenOperationCompleted(object arg) {
            if ((this.ValidatetokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidatetokenCompleted(this, new ValidatetokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Tokengenerator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Tokengenerator(string Pin, string Dissem, string Application, string Functionality, string userkey, string uid) {
            object[] results = this.Invoke("Tokengenerator", new object[] {
                        Pin,
                        Dissem,
                        Application,
                        Functionality,
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void TokengeneratorAsync(string Pin, string Dissem, string Application, string Functionality, string userkey, string uid) {
            this.TokengeneratorAsync(Pin, Dissem, Application, Functionality, userkey, uid, null);
        }
        
        /// <remarks/>
        public void TokengeneratorAsync(string Pin, string Dissem, string Application, string Functionality, string userkey, string uid, object userState) {
            if ((this.TokengeneratorOperationCompleted == null)) {
                this.TokengeneratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTokengeneratorOperationCompleted);
            }
            this.InvokeAsync("Tokengenerator", new object[] {
                        Pin,
                        Dissem,
                        Application,
                        Functionality,
                        userkey,
                        uid}, this.TokengeneratorOperationCompleted, userState);
        }
        
        private void OnTokengeneratorOperationCompleted(object arg) {
            if ((this.TokengeneratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TokengeneratorCompleted(this, new TokengeneratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PensiondocSender_dated", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PensiondocSender_dated(string Pin, string Doctype, string SrcChannel, string sdate, string edate, string userkey, string uid) {
            object[] results = this.Invoke("PensiondocSender_dated", new object[] {
                        Pin,
                        Doctype,
                        SrcChannel,
                        sdate,
                        edate,
                        userkey,
                        uid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PensiondocSender_datedAsync(string Pin, string Doctype, string SrcChannel, string sdate, string edate, string userkey, string uid) {
            this.PensiondocSender_datedAsync(Pin, Doctype, SrcChannel, sdate, edate, userkey, uid, null);
        }
        
        /// <remarks/>
        public void PensiondocSender_datedAsync(string Pin, string Doctype, string SrcChannel, string sdate, string edate, string userkey, string uid, object userState) {
            if ((this.PensiondocSender_datedOperationCompleted == null)) {
                this.PensiondocSender_datedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPensiondocSender_datedOperationCompleted);
            }
            this.InvokeAsync("PensiondocSender_dated", new object[] {
                        Pin,
                        Doctype,
                        SrcChannel,
                        sdate,
                        edate,
                        userkey,
                        uid}, this.PensiondocSender_datedOperationCompleted, userState);
        }
        
        private void OnPensiondocSender_datedOperationCompleted(object arg) {
            if ((this.PensiondocSender_datedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PensiondocSender_datedCompleted(this, new PensiondocSender_datedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogNps", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LogNps(string Q1, string Q2, string Q3, string Q4i, string Q4ii, string Q4iii, string surveycode, string RSAPIN, string userkey, string uid) {
            object[] results = this.Invoke("LogNps", new object[] {
                        Q1,
                        Q2,
                        Q3,
                        Q4i,
                        Q4ii,
                        Q4iii,
                        surveycode,
                        RSAPIN,
                        userkey,
                        uid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LogNpsAsync(string Q1, string Q2, string Q3, string Q4i, string Q4ii, string Q4iii, string surveycode, string RSAPIN, string userkey, string uid) {
            this.LogNpsAsync(Q1, Q2, Q3, Q4i, Q4ii, Q4iii, surveycode, RSAPIN, userkey, uid, null);
        }
        
        /// <remarks/>
        public void LogNpsAsync(string Q1, string Q2, string Q3, string Q4i, string Q4ii, string Q4iii, string surveycode, string RSAPIN, string userkey, string uid, object userState) {
            if ((this.LogNpsOperationCompleted == null)) {
                this.LogNpsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogNpsOperationCompleted);
            }
            this.InvokeAsync("LogNps", new object[] {
                        Q1,
                        Q2,
                        Q3,
                        Q4i,
                        Q4ii,
                        Q4iii,
                        surveycode,
                        RSAPIN,
                        userkey,
                        uid}, this.LogNpsOperationCompleted, userState);
        }
        
        private void OnLogNpsOperationCompleted(object arg) {
            if ((this.LogNpsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogNpsCompleted(this, new LogNpsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/cleanamter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string cleanamter(string ammt) {
            object[] results = this.Invoke("cleanamter", new object[] {
                        ammt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cleanamterAsync(string ammt) {
            this.cleanamterAsync(ammt, null);
        }
        
        /// <remarks/>
        public void cleanamterAsync(string ammt, object userState) {
            if ((this.cleanamterOperationCompleted == null)) {
                this.cleanamterOperationCompleted = new System.Threading.SendOrPostCallback(this.OncleanamterOperationCompleted);
            }
            this.InvokeAsync("cleanamter", new object[] {
                        ammt}, this.cleanamterOperationCompleted, userState);
        }
        
        private void OncleanamterOperationCompleted(object arg) {
            if ((this.cleanamterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cleanamterCompleted(this, new cleanamterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetchdata_addendum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Fetchdata_addendum(string PIN, string sdate, string edate, string userkey, string uid) {
            object[] results = this.Invoke("Fetchdata_addendum", new object[] {
                        PIN,
                        sdate,
                        edate,
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Fetchdata_addendumAsync(string PIN, string sdate, string edate, string userkey, string uid) {
            this.Fetchdata_addendumAsync(PIN, sdate, edate, userkey, uid, null);
        }
        
        /// <remarks/>
        public void Fetchdata_addendumAsync(string PIN, string sdate, string edate, string userkey, string uid, object userState) {
            if ((this.Fetchdata_addendumOperationCompleted == null)) {
                this.Fetchdata_addendumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchdata_addendumOperationCompleted);
            }
            this.InvokeAsync("Fetchdata_addendum", new object[] {
                        PIN,
                        sdate,
                        edate,
                        userkey,
                        uid}, this.Fetchdata_addendumOperationCompleted, userState);
        }
        
        private void OnFetchdata_addendumOperationCompleted(object arg) {
            if ((this.Fetchdata_addendumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetchdata_addendumCompleted(this, new Fetchdata_addendumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetchtxn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Fetchtxn(string PIN, string sdate, string edate, string userkey, string uid) {
            object[] results = this.Invoke("Fetchtxn", new object[] {
                        PIN,
                        sdate,
                        edate,
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FetchtxnAsync(string PIN, string sdate, string edate, string userkey, string uid) {
            this.FetchtxnAsync(PIN, sdate, edate, userkey, uid, null);
        }
        
        /// <remarks/>
        public void FetchtxnAsync(string PIN, string sdate, string edate, string userkey, string uid, object userState) {
            if ((this.FetchtxnOperationCompleted == null)) {
                this.FetchtxnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchtxnOperationCompleted);
            }
            this.InvokeAsync("Fetchtxn", new object[] {
                        PIN,
                        sdate,
                        edate,
                        userkey,
                        uid}, this.FetchtxnOperationCompleted, userState);
        }
        
        private void OnFetchtxnOperationCompleted(object arg) {
            if ((this.FetchtxnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchtxnCompleted(this, new FetchtxnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/States", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable States() {
            object[] results = this.Invoke("States", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void StatesAsync() {
            this.StatesAsync(null);
        }
        
        /// <remarks/>
        public void StatesAsync(object userState) {
            if ((this.StatesOperationCompleted == null)) {
                this.StatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatesOperationCompleted);
            }
            this.InvokeAsync("States", new object[0], this.StatesOperationCompleted, userState);
        }
        
        private void OnStatesOperationCompleted(object arg) {
            if ((this.StatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatesCompleted(this, new StatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatevaluestest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable updatevaluestest() {
            object[] results = this.Invoke("updatevaluestest", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void updatevaluestestAsync() {
            this.updatevaluestestAsync(null);
        }
        
        /// <remarks/>
        public void updatevaluestestAsync(object userState) {
            if ((this.updatevaluestestOperationCompleted == null)) {
                this.updatevaluestestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatevaluestestOperationCompleted);
            }
            this.InvokeAsync("updatevaluestest", new object[0], this.updatevaluestestOperationCompleted, userState);
        }
        
        private void OnupdatevaluestestOperationCompleted(object arg) {
            if ((this.updatevaluestestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatevaluestestCompleted(this, new updatevaluestestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Lga", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Lga() {
            object[] results = this.Invoke("Lga", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LgaAsync() {
            this.LgaAsync(null);
        }
        
        /// <remarks/>
        public void LgaAsync(object userState) {
            if ((this.LgaOperationCompleted == null)) {
                this.LgaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLgaOperationCompleted);
            }
            this.InvokeAsync("Lga", new object[0], this.LgaOperationCompleted, userState);
        }
        
        private void OnLgaOperationCompleted(object arg) {
            if ((this.LgaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LgaCompleted(this, new LgaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Benefit_App_Setup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Benefit_App_Setup(string userkey, string uid, int query_type, int app_id) {
            object[] results = this.Invoke("Benefit_App_Setup", new object[] {
                        userkey,
                        uid,
                        query_type,
                        app_id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Benefit_App_SetupAsync(string userkey, string uid, int query_type, int app_id) {
            this.Benefit_App_SetupAsync(userkey, uid, query_type, app_id, null);
        }
        
        /// <remarks/>
        public void Benefit_App_SetupAsync(string userkey, string uid, int query_type, int app_id, object userState) {
            if ((this.Benefit_App_SetupOperationCompleted == null)) {
                this.Benefit_App_SetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBenefit_App_SetupOperationCompleted);
            }
            this.InvokeAsync("Benefit_App_Setup", new object[] {
                        userkey,
                        uid,
                        query_type,
                        app_id}, this.Benefit_App_SetupOperationCompleted, userState);
        }
        
        private void OnBenefit_App_SetupOperationCompleted(object arg) {
            if ((this.Benefit_App_SetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Benefit_App_SetupCompleted(this, new Benefit_App_SetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Benefit_State", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Benefit_State(string userkey, string uid) {
            object[] results = this.Invoke("Benefit_State", new object[] {
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Benefit_StateAsync(string userkey, string uid) {
            this.Benefit_StateAsync(userkey, uid, null);
        }
        
        /// <remarks/>
        public void Benefit_StateAsync(string userkey, string uid, object userState) {
            if ((this.Benefit_StateOperationCompleted == null)) {
                this.Benefit_StateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBenefit_StateOperationCompleted);
            }
            this.InvokeAsync("Benefit_State", new object[] {
                        userkey,
                        uid}, this.Benefit_StateOperationCompleted, userState);
        }
        
        private void OnBenefit_StateOperationCompleted(object arg) {
            if ((this.Benefit_StateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Benefit_StateCompleted(this, new Benefit_StateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Benefit_StanbicLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Benefit_StanbicLocation(string userkey, string uid, string state) {
            object[] results = this.Invoke("Benefit_StanbicLocation", new object[] {
                        userkey,
                        uid,
                        state});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Benefit_StanbicLocationAsync(string userkey, string uid, string state) {
            this.Benefit_StanbicLocationAsync(userkey, uid, state, null);
        }
        
        /// <remarks/>
        public void Benefit_StanbicLocationAsync(string userkey, string uid, string state, object userState) {
            if ((this.Benefit_StanbicLocationOperationCompleted == null)) {
                this.Benefit_StanbicLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBenefit_StanbicLocationOperationCompleted);
            }
            this.InvokeAsync("Benefit_StanbicLocation", new object[] {
                        userkey,
                        uid,
                        state}, this.Benefit_StanbicLocationOperationCompleted, userState);
        }
        
        private void OnBenefit_StanbicLocationOperationCompleted(object arg) {
            if ((this.Benefit_StanbicLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Benefit_StanbicLocationCompleted(this, new Benefit_StanbicLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Benefit_Application", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Benefit_Application(string userkey, string uid, string pid) {
            object[] results = this.Invoke("Benefit_Application", new object[] {
                        userkey,
                        uid,
                        pid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Benefit_ApplicationAsync(string userkey, string uid, string pid) {
            this.Benefit_ApplicationAsync(userkey, uid, pid, null);
        }
        
        /// <remarks/>
        public void Benefit_ApplicationAsync(string userkey, string uid, string pid, object userState) {
            if ((this.Benefit_ApplicationOperationCompleted == null)) {
                this.Benefit_ApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBenefit_ApplicationOperationCompleted);
            }
            this.InvokeAsync("Benefit_Application", new object[] {
                        userkey,
                        uid,
                        pid}, this.Benefit_ApplicationOperationCompleted, userState);
        }
        
        private void OnBenefit_ApplicationOperationCompleted(object arg) {
            if ((this.Benefit_ApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Benefit_ApplicationCompleted(this, new Benefit_ApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Benefit_AppPrevInstance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Benefit_AppPrevInstance(string userkey, string uid, string pin, int app_type) {
            object[] results = this.Invoke("Benefit_AppPrevInstance", new object[] {
                        userkey,
                        uid,
                        pin,
                        app_type});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Benefit_AppPrevInstanceAsync(string userkey, string uid, string pin, int app_type) {
            this.Benefit_AppPrevInstanceAsync(userkey, uid, pin, app_type, null);
        }
        
        /// <remarks/>
        public void Benefit_AppPrevInstanceAsync(string userkey, string uid, string pin, int app_type, object userState) {
            if ((this.Benefit_AppPrevInstanceOperationCompleted == null)) {
                this.Benefit_AppPrevInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBenefit_AppPrevInstanceOperationCompleted);
            }
            this.InvokeAsync("Benefit_AppPrevInstance", new object[] {
                        userkey,
                        uid,
                        pin,
                        app_type}, this.Benefit_AppPrevInstanceOperationCompleted, userState);
        }
        
        private void OnBenefit_AppPrevInstanceOperationCompleted(object arg) {
            if ((this.Benefit_AppPrevInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Benefit_AppPrevInstanceCompleted(this, new Benefit_AppPrevInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Benefit_CreateApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Benefit_CreateApp(string userkey, string uid, string PIN, int AppType, string ProcessID) {
            object[] results = this.Invoke("Benefit_CreateApp", new object[] {
                        userkey,
                        uid,
                        PIN,
                        AppType,
                        ProcessID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Benefit_CreateAppAsync(string userkey, string uid, string PIN, int AppType, string ProcessID) {
            this.Benefit_CreateAppAsync(userkey, uid, PIN, AppType, ProcessID, null);
        }
        
        /// <remarks/>
        public void Benefit_CreateAppAsync(string userkey, string uid, string PIN, int AppType, string ProcessID, object userState) {
            if ((this.Benefit_CreateAppOperationCompleted == null)) {
                this.Benefit_CreateAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBenefit_CreateAppOperationCompleted);
            }
            this.InvokeAsync("Benefit_CreateApp", new object[] {
                        userkey,
                        uid,
                        PIN,
                        AppType,
                        ProcessID}, this.Benefit_CreateAppOperationCompleted, userState);
        }
        
        private void OnBenefit_CreateAppOperationCompleted(object arg) {
            if ((this.Benefit_CreateAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Benefit_CreateAppCompleted(this, new Benefit_CreateAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Contributions_Within_Period", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Contributions_Within_Period(string PIN, string sdate, string edate, string userkey, string uid) {
            object[] results = this.Invoke("Contributions_Within_Period", new object[] {
                        PIN,
                        sdate,
                        edate,
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Contributions_Within_PeriodAsync(string PIN, string sdate, string edate, string userkey, string uid) {
            this.Contributions_Within_PeriodAsync(PIN, sdate, edate, userkey, uid, null);
        }
        
        /// <remarks/>
        public void Contributions_Within_PeriodAsync(string PIN, string sdate, string edate, string userkey, string uid, object userState) {
            if ((this.Contributions_Within_PeriodOperationCompleted == null)) {
                this.Contributions_Within_PeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContributions_Within_PeriodOperationCompleted);
            }
            this.InvokeAsync("Contributions_Within_Period", new object[] {
                        PIN,
                        sdate,
                        edate,
                        userkey,
                        uid}, this.Contributions_Within_PeriodOperationCompleted, userState);
        }
        
        private void OnContributions_Within_PeriodOperationCompleted(object arg) {
            if ((this.Contributions_Within_PeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Contributions_Within_PeriodCompleted(this, new Contributions_Within_PeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FundPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable FundPrice(string FundID, string sdate, string edate, string userkey, string uid) {
            object[] results = this.Invoke("FundPrice", new object[] {
                        FundID,
                        sdate,
                        edate,
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FundPriceAsync(string FundID, string sdate, string edate, string userkey, string uid) {
            this.FundPriceAsync(FundID, sdate, edate, userkey, uid, null);
        }
        
        /// <remarks/>
        public void FundPriceAsync(string FundID, string sdate, string edate, string userkey, string uid, object userState) {
            if ((this.FundPriceOperationCompleted == null)) {
                this.FundPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFundPriceOperationCompleted);
            }
            this.InvokeAsync("FundPrice", new object[] {
                        FundID,
                        sdate,
                        edate,
                        userkey,
                        uid}, this.FundPriceOperationCompleted, userState);
        }
        
        private void OnFundPriceOperationCompleted(object arg) {
            if ((this.FundPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FundPriceCompleted(this, new FundPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Contributions_As_At_Period", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Contributions_As_At_Period(string PIN, string edate, string userkey, string uid) {
            object[] results = this.Invoke("Contributions_As_At_Period", new object[] {
                        PIN,
                        edate,
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Contributions_As_At_PeriodAsync(string PIN, string edate, string userkey, string uid) {
            this.Contributions_As_At_PeriodAsync(PIN, edate, userkey, uid, null);
        }
        
        /// <remarks/>
        public void Contributions_As_At_PeriodAsync(string PIN, string edate, string userkey, string uid, object userState) {
            if ((this.Contributions_As_At_PeriodOperationCompleted == null)) {
                this.Contributions_As_At_PeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContributions_As_At_PeriodOperationCompleted);
            }
            this.InvokeAsync("Contributions_As_At_Period", new object[] {
                        PIN,
                        edate,
                        userkey,
                        uid}, this.Contributions_As_At_PeriodOperationCompleted, userState);
        }
        
        private void OnContributions_As_At_PeriodOperationCompleted(object arg) {
            if ((this.Contributions_As_At_PeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Contributions_As_At_PeriodCompleted(this, new Contributions_As_At_PeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BenefitApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable BenefitApp(string PIN, string userkey, string uid) {
            object[] results = this.Invoke("BenefitApp", new object[] {
                        PIN,
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void BenefitAppAsync(string PIN, string userkey, string uid) {
            this.BenefitAppAsync(PIN, userkey, uid, null);
        }
        
        /// <remarks/>
        public void BenefitAppAsync(string PIN, string userkey, string uid, object userState) {
            if ((this.BenefitAppOperationCompleted == null)) {
                this.BenefitAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBenefitAppOperationCompleted);
            }
            this.InvokeAsync("BenefitApp", new object[] {
                        PIN,
                        userkey,
                        uid}, this.BenefitAppOperationCompleted, userState);
        }
        
        private void OnBenefitAppOperationCompleted(object arg) {
            if ((this.BenefitAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BenefitAppCompleted(this, new BenefitAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetchdata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Fetchdata(string PIN, string dtype, string userkey, string uid) {
            object[] results = this.Invoke("Fetchdata", new object[] {
                        PIN,
                        dtype,
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void FetchdataAsync(string PIN, string dtype, string userkey, string uid) {
            this.FetchdataAsync(PIN, dtype, userkey, uid, null);
        }
        
        /// <remarks/>
        public void FetchdataAsync(string PIN, string dtype, string userkey, string uid, object userState) {
            if ((this.FetchdataOperationCompleted == null)) {
                this.FetchdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchdataOperationCompleted);
            }
            this.InvokeAsync("Fetchdata", new object[] {
                        PIN,
                        dtype,
                        userkey,
                        uid}, this.FetchdataOperationCompleted, userState);
        }
        
        private void OnFetchdataOperationCompleted(object arg) {
            if ((this.FetchdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchdataCompleted(this, new FetchdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DateTimeConverter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DateTimeConverter(string date_time) {
            object[] results = this.Invoke("DateTimeConverter", new object[] {
                        date_time});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DateTimeConverterAsync(string date_time) {
            this.DateTimeConverterAsync(date_time, null);
        }
        
        /// <remarks/>
        public void DateTimeConverterAsync(string date_time, object userState) {
            if ((this.DateTimeConverterOperationCompleted == null)) {
                this.DateTimeConverterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDateTimeConverterOperationCompleted);
            }
            this.InvokeAsync("DateTimeConverter", new object[] {
                        date_time}, this.DateTimeConverterOperationCompleted, userState);
        }
        
        private void OnDateTimeConverterOperationCompleted(object arg) {
            if ((this.DateTimeConverterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DateTimeConverterCompleted(this, new DateTimeConverterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendtext_pension", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendtext_pension(string phone, string msg, string sender) {
            this.Invoke("sendtext_pension", new object[] {
                        phone,
                        msg,
                        sender});
        }
        
        /// <remarks/>
        public void sendtext_pensionAsync(string phone, string msg, string sender) {
            this.sendtext_pensionAsync(phone, msg, sender, null);
        }
        
        /// <remarks/>
        public void sendtext_pensionAsync(string phone, string msg, string sender, object userState) {
            if ((this.sendtext_pensionOperationCompleted == null)) {
                this.sendtext_pensionOperationCompleted = new System.Threading.SendOrPostCallback(this.Onsendtext_pensionOperationCompleted);
            }
            this.InvokeAsync("sendtext_pension", new object[] {
                        phone,
                        msg,
                        sender}, this.sendtext_pensionOperationCompleted, userState);
        }
        
        private void Onsendtext_pensionOperationCompleted(object arg) {
            if ((this.sendtext_pensionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendtext_pensionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendtext_pension_new", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendtext_pension_new(string phone, string msg, string sender) {
            object[] results = this.Invoke("sendtext_pension_new", new object[] {
                        phone,
                        msg,
                        sender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendtext_pension_newAsync(string phone, string msg, string sender) {
            this.sendtext_pension_newAsync(phone, msg, sender, null);
        }
        
        /// <remarks/>
        public void sendtext_pension_newAsync(string phone, string msg, string sender, object userState) {
            if ((this.sendtext_pension_newOperationCompleted == null)) {
                this.sendtext_pension_newOperationCompleted = new System.Threading.SendOrPostCallback(this.Onsendtext_pension_newOperationCompleted);
            }
            this.InvokeAsync("sendtext_pension_new", new object[] {
                        phone,
                        msg,
                        sender}, this.sendtext_pension_newOperationCompleted, userState);
        }
        
        private void Onsendtext_pension_newOperationCompleted(object arg) {
            if ((this.sendtext_pension_newCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendtext_pension_newCompleted(this, new sendtext_pension_newCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBioData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateBioData(string pin, string col_name, string old_val, string new_val, string client_type, string table_no, string field_no, string userkey, string uid, string tablename) {
            object[] results = this.Invoke("UpdateBioData", new object[] {
                        pin,
                        col_name,
                        old_val,
                        new_val,
                        client_type,
                        table_no,
                        field_no,
                        userkey,
                        uid,
                        tablename});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBioDataAsync(string pin, string col_name, string old_val, string new_val, string client_type, string table_no, string field_no, string userkey, string uid, string tablename) {
            this.UpdateBioDataAsync(pin, col_name, old_val, new_val, client_type, table_no, field_no, userkey, uid, tablename, null);
        }
        
        /// <remarks/>
        public void UpdateBioDataAsync(string pin, string col_name, string old_val, string new_val, string client_type, string table_no, string field_no, string userkey, string uid, string tablename, object userState) {
            if ((this.UpdateBioDataOperationCompleted == null)) {
                this.UpdateBioDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBioDataOperationCompleted);
            }
            this.InvokeAsync("UpdateBioData", new object[] {
                        pin,
                        col_name,
                        old_val,
                        new_val,
                        client_type,
                        table_no,
                        field_no,
                        userkey,
                        uid,
                        tablename}, this.UpdateBioDataOperationCompleted, userState);
        }
        
        private void OnUpdateBioDataOperationCompleted(object arg) {
            if ((this.UpdateBioDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBioDataCompleted(this, new UpdateBioDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsValidcontact", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidcontact(string Pin, string contactype, string SrcChannel, string userkey, string uid) {
            object[] results = this.Invoke("IsValidcontact", new object[] {
                        Pin,
                        contactype,
                        SrcChannel,
                        userkey,
                        uid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsValidcontactAsync(string Pin, string contactype, string SrcChannel, string userkey, string uid) {
            this.IsValidcontactAsync(Pin, contactype, SrcChannel, userkey, uid, null);
        }
        
        /// <remarks/>
        public void IsValidcontactAsync(string Pin, string contactype, string SrcChannel, string userkey, string uid, object userState) {
            if ((this.IsValidcontactOperationCompleted == null)) {
                this.IsValidcontactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidcontactOperationCompleted);
            }
            this.InvokeAsync("IsValidcontact", new object[] {
                        Pin,
                        contactype,
                        SrcChannel,
                        userkey,
                        uid}, this.IsValidcontactOperationCompleted, userState);
        }
        
        private void OnIsValidcontactOperationCompleted(object arg) {
            if ((this.IsValidcontactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidcontactCompleted(this, new IsValidcontactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ResetPassword(string LoginVal, string Logintype, string BrowserUsed, string srcchannel, string userkey, string uid) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        LoginVal,
                        Logintype,
                        BrowserUsed,
                        srcchannel,
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string LoginVal, string Logintype, string BrowserUsed, string srcchannel, string userkey, string uid) {
            this.ResetPasswordAsync(LoginVal, Logintype, BrowserUsed, srcchannel, userkey, uid, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string LoginVal, string Logintype, string BrowserUsed, string srcchannel, string userkey, string uid, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        LoginVal,
                        Logintype,
                        BrowserUsed,
                        srcchannel,
                        userkey,
                        uid}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBanks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBanks(string userkey, string uid) {
            object[] results = this.Invoke("GetBanks", new object[] {
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBanksAsync(string userkey, string uid) {
            this.GetBanksAsync(userkey, uid, null);
        }
        
        /// <remarks/>
        public void GetBanksAsync(string userkey, string uid, object userState) {
            if ((this.GetBanksOperationCompleted == null)) {
                this.GetBanksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBanksOperationCompleted);
            }
            this.InvokeAsync("GetBanks", new object[] {
                        userkey,
                        uid}, this.GetBanksOperationCompleted, userState);
        }
        
        private void OnGetBanksOperationCompleted(object arg) {
            if ((this.GetBanksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBanksCompleted(this, new GetBanksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PensionLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable PensionLogin(string LoginVal, string Logintype, string pword, string BrowserUsed, string SessID, string Agent, string Ipaddress, string userkey, string uid) {
            object[] results = this.Invoke("PensionLogin", new object[] {
                        LoginVal,
                        Logintype,
                        pword,
                        BrowserUsed,
                        SessID,
                        Agent,
                        Ipaddress,
                        userkey,
                        uid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void PensionLoginAsync(string LoginVal, string Logintype, string pword, string BrowserUsed, string SessID, string Agent, string Ipaddress, string userkey, string uid) {
            this.PensionLoginAsync(LoginVal, Logintype, pword, BrowserUsed, SessID, Agent, Ipaddress, userkey, uid, null);
        }
        
        /// <remarks/>
        public void PensionLoginAsync(string LoginVal, string Logintype, string pword, string BrowserUsed, string SessID, string Agent, string Ipaddress, string userkey, string uid, object userState) {
            if ((this.PensionLoginOperationCompleted == null)) {
                this.PensionLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPensionLoginOperationCompleted);
            }
            this.InvokeAsync("PensionLogin", new object[] {
                        LoginVal,
                        Logintype,
                        pword,
                        BrowserUsed,
                        SessID,
                        Agent,
                        Ipaddress,
                        userkey,
                        uid}, this.PensionLoginOperationCompleted, userState);
        }
        
        private void OnPensionLoginOperationCompleted(object arg) {
            if ((this.PensionLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PensionLoginCompleted(this, new PensionLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Session", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_Session(string id) {
            object[] results = this.Invoke("Get_Session", new object[] {
                        id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_SessionAsync(string id) {
            this.Get_SessionAsync(id, null);
        }
        
        /// <remarks/>
        public void Get_SessionAsync(string id, object userState) {
            if ((this.Get_SessionOperationCompleted == null)) {
                this.Get_SessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_SessionOperationCompleted);
            }
            this.InvokeAsync("Get_Session", new object[] {
                        id}, this.Get_SessionOperationCompleted, userState);
        }
        
        private void OnGet_SessionOperationCompleted(object arg) {
            if ((this.Get_SessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_SessionCompleted(this, new Get_SessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchPRC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchPRC(string pin, string userkey, string uid, string src) {
            object[] results = this.Invoke("FetchPRC", new object[] {
                        pin,
                        userkey,
                        uid,
                        src});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchPRCAsync(string pin, string userkey, string uid, string src) {
            this.FetchPRCAsync(pin, userkey, uid, src, null);
        }
        
        /// <remarks/>
        public void FetchPRCAsync(string pin, string userkey, string uid, string src, object userState) {
            if ((this.FetchPRCOperationCompleted == null)) {
                this.FetchPRCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchPRCOperationCompleted);
            }
            this.InvokeAsync("FetchPRC", new object[] {
                        pin,
                        userkey,
                        uid,
                        src}, this.FetchPRCOperationCompleted, userState);
        }
        
        private void OnFetchPRCOperationCompleted(object arg) {
            if ((this.FetchPRCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchPRCCompleted(this, new FetchPRCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetchstatement_multiformat_test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Fetchstatement_multiformat_test(string pin, string sdate, string edate, string userkey, string uid, string src, string fmat) {
            object[] results = this.Invoke("Fetchstatement_multiformat_test", new object[] {
                        pin,
                        sdate,
                        edate,
                        userkey,
                        uid,
                        src,
                        fmat});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void Fetchstatement_multiformat_testAsync(string pin, string sdate, string edate, string userkey, string uid, string src, string fmat) {
            this.Fetchstatement_multiformat_testAsync(pin, sdate, edate, userkey, uid, src, fmat, null);
        }
        
        /// <remarks/>
        public void Fetchstatement_multiformat_testAsync(string pin, string sdate, string edate, string userkey, string uid, string src, string fmat, object userState) {
            if ((this.Fetchstatement_multiformat_testOperationCompleted == null)) {
                this.Fetchstatement_multiformat_testOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchstatement_multiformat_testOperationCompleted);
            }
            this.InvokeAsync("Fetchstatement_multiformat_test", new object[] {
                        pin,
                        sdate,
                        edate,
                        userkey,
                        uid,
                        src,
                        fmat}, this.Fetchstatement_multiformat_testOperationCompleted, userState);
        }
        
        private void OnFetchstatement_multiformat_testOperationCompleted(object arg) {
            if ((this.Fetchstatement_multiformat_testCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetchstatement_multiformat_testCompleted(this, new Fetchstatement_multiformat_testCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetchstatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Fetchstatement(string pin, string sdate, string edate, string userkey, string uid, string src) {
            object[] results = this.Invoke("Fetchstatement", new object[] {
                        pin,
                        sdate,
                        edate,
                        userkey,
                        uid,
                        src});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchstatementAsync(string pin, string sdate, string edate, string userkey, string uid, string src) {
            this.FetchstatementAsync(pin, sdate, edate, userkey, uid, src, null);
        }
        
        /// <remarks/>
        public void FetchstatementAsync(string pin, string sdate, string edate, string userkey, string uid, string src, object userState) {
            if ((this.FetchstatementOperationCompleted == null)) {
                this.FetchstatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchstatementOperationCompleted);
            }
            this.InvokeAsync("Fetchstatement", new object[] {
                        pin,
                        sdate,
                        edate,
                        userkey,
                        uid,
                        src}, this.FetchstatementOperationCompleted, userState);
        }
        
        private void OnFetchstatementOperationCompleted(object arg) {
            if ((this.FetchstatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchstatementCompleted(this, new FetchstatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetchstatement_multiformat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Fetchstatement_multiformat(string pin, string sdate, string edate, string userkey, string uid, string src, string fmat) {
            object[] results = this.Invoke("Fetchstatement_multiformat", new object[] {
                        pin,
                        sdate,
                        edate,
                        userkey,
                        uid,
                        src,
                        fmat});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void Fetchstatement_multiformatAsync(string pin, string sdate, string edate, string userkey, string uid, string src, string fmat) {
            this.Fetchstatement_multiformatAsync(pin, sdate, edate, userkey, uid, src, fmat, null);
        }
        
        /// <remarks/>
        public void Fetchstatement_multiformatAsync(string pin, string sdate, string edate, string userkey, string uid, string src, string fmat, object userState) {
            if ((this.Fetchstatement_multiformatOperationCompleted == null)) {
                this.Fetchstatement_multiformatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchstatement_multiformatOperationCompleted);
            }
            this.InvokeAsync("Fetchstatement_multiformat", new object[] {
                        pin,
                        sdate,
                        edate,
                        userkey,
                        uid,
                        src,
                        fmat}, this.Fetchstatement_multiformatOperationCompleted, userState);
        }
        
        private void OnFetchstatement_multiformatOperationCompleted(object arg) {
            if ((this.Fetchstatement_multiformatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetchstatement_multiformatCompleted(this, new Fetchstatement_multiformatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetchstatement_multiformat_fid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Fetchstatement_multiformat_fid(string pin, string sdate, string edate, string userkey, string uid, string src, string fmat, string fid) {
            object[] results = this.Invoke("Fetchstatement_multiformat_fid", new object[] {
                        pin,
                        sdate,
                        edate,
                        userkey,
                        uid,
                        src,
                        fmat,
                        fid});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void Fetchstatement_multiformat_fidAsync(string pin, string sdate, string edate, string userkey, string uid, string src, string fmat, string fid) {
            this.Fetchstatement_multiformat_fidAsync(pin, sdate, edate, userkey, uid, src, fmat, fid, null);
        }
        
        /// <remarks/>
        public void Fetchstatement_multiformat_fidAsync(string pin, string sdate, string edate, string userkey, string uid, string src, string fmat, string fid, object userState) {
            if ((this.Fetchstatement_multiformat_fidOperationCompleted == null)) {
                this.Fetchstatement_multiformat_fidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchstatement_multiformat_fidOperationCompleted);
            }
            this.InvokeAsync("Fetchstatement_multiformat_fid", new object[] {
                        pin,
                        sdate,
                        edate,
                        userkey,
                        uid,
                        src,
                        fmat,
                        fid}, this.Fetchstatement_multiformat_fidOperationCompleted, userState);
        }
        
        private void OnFetchstatement_multiformat_fidOperationCompleted(object arg) {
            if ((this.Fetchstatement_multiformat_fidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetchstatement_multiformat_fidCompleted(this, new Fetchstatement_multiformat_fidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SendlatestBenefitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LastthreetxnCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PensionElectronicDocsCompletedEventHandler(object sender, PensionElectronicDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PensionElectronicDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PensionElectronicDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LogestatementCompletedEventHandler(object sender, LogestatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogestatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogestatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ValidatetokenCompletedEventHandler(object sender, ValidatetokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidatetokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidatetokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TokengeneratorCompletedEventHandler(object sender, TokengeneratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TokengeneratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TokengeneratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PensiondocSender_datedCompletedEventHandler(object sender, PensiondocSender_datedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PensiondocSender_datedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PensiondocSender_datedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LogNpsCompletedEventHandler(object sender, LogNpsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogNpsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogNpsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void cleanamterCompletedEventHandler(object sender, cleanamterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cleanamterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cleanamterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Fetchdata_addendumCompletedEventHandler(object sender, Fetchdata_addendumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetchdata_addendumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetchdata_addendumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FetchtxnCompletedEventHandler(object sender, FetchtxnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchtxnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchtxnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StatesCompletedEventHandler(object sender, StatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void updatevaluestestCompletedEventHandler(object sender, updatevaluestestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatevaluestestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatevaluestestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LgaCompletedEventHandler(object sender, LgaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LgaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LgaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Benefit_App_SetupCompletedEventHandler(object sender, Benefit_App_SetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Benefit_App_SetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Benefit_App_SetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Benefit_StateCompletedEventHandler(object sender, Benefit_StateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Benefit_StateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Benefit_StateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Benefit_StanbicLocationCompletedEventHandler(object sender, Benefit_StanbicLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Benefit_StanbicLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Benefit_StanbicLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Benefit_ApplicationCompletedEventHandler(object sender, Benefit_ApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Benefit_ApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Benefit_ApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Benefit_AppPrevInstanceCompletedEventHandler(object sender, Benefit_AppPrevInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Benefit_AppPrevInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Benefit_AppPrevInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Benefit_CreateAppCompletedEventHandler(object sender, Benefit_CreateAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Benefit_CreateAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Benefit_CreateAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Contributions_Within_PeriodCompletedEventHandler(object sender, Contributions_Within_PeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Contributions_Within_PeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Contributions_Within_PeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FundPriceCompletedEventHandler(object sender, FundPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FundPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FundPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Contributions_As_At_PeriodCompletedEventHandler(object sender, Contributions_As_At_PeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Contributions_As_At_PeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Contributions_As_At_PeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BenefitAppCompletedEventHandler(object sender, BenefitAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BenefitAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BenefitAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FetchdataCompletedEventHandler(object sender, FetchdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DateTimeConverterCompletedEventHandler(object sender, DateTimeConverterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DateTimeConverterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DateTimeConverterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void sendtext_pensionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void sendtext_pension_newCompletedEventHandler(object sender, sendtext_pension_newCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendtext_pension_newCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendtext_pension_newCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateBioDataCompletedEventHandler(object sender, UpdateBioDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBioDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBioDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsValidcontactCompletedEventHandler(object sender, IsValidcontactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidcontactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidcontactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBanksCompletedEventHandler(object sender, GetBanksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBanksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBanksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PensionLoginCompletedEventHandler(object sender, PensionLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PensionLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PensionLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Get_SessionCompletedEventHandler(object sender, Get_SessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_SessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_SessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FetchPRCCompletedEventHandler(object sender, FetchPRCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchPRCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchPRCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Fetchstatement_multiformat_testCompletedEventHandler(object sender, Fetchstatement_multiformat_testCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetchstatement_multiformat_testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetchstatement_multiformat_testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FetchstatementCompletedEventHandler(object sender, FetchstatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchstatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchstatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Fetchstatement_multiformatCompletedEventHandler(object sender, Fetchstatement_multiformatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetchstatement_multiformatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetchstatement_multiformatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Fetchstatement_multiformat_fidCompletedEventHandler(object sender, Fetchstatement_multiformat_fidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetchstatement_multiformat_fidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetchstatement_multiformat_fidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591